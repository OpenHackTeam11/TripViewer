name: POI API CI/CD Pipeline
env: 
  working-directory: ./apis/poi
  acr-name: openhackfwl15lz6acr
  deploy-ref: refs/heads/master
  repository-name: devopsoh/api-poi
  PAT: ${{ secrets.AZURE_DEVOPS_ACCESS_TOKEN }}
  GithubToken: ${{ secrets.GITHUB_TOKEN}}
  app-service-name: openhackfwl15lz6poi
  slot-name: staging

on:
  push:
    paths:
    - 'apis/poi/**'
  pull_request:
    branches: [ master ]
    paths:
    - 'apis/poi/**'
      
jobs: 
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
    
    - name: Restore dependencies
      run: dotnet restore
      working-directory: ${{env.working-directory}}
      
    - name: Build
      run: dotnet build --no-restore 
      working-directory: ${{env.working-directory}}
      
    - name: Test
      run: dotnet test --no-build --verbosity normal
      working-directory: ${{env.working-directory}}
      
    - name: Create Bug for Failed Build
      uses: stefanstranger/azuredevops-bug-action@1.1
      if: failure()
      with:
        OrganizationName: "hacker1dn2"
        PAT: "PAT"
        ProjectName: "TripViewer"
        AreaPath: "TripViewer"
        IterationPath: "TripViewer"
        GithubToken: "GithubToken"
        WorkflowFileName: "poi-api-ci-pipeline.yml"
    
  push-acr:
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    
    steps:
    - name: Log in with Azure
      uses: azure/login@v1
      with:
        creds: '${{ secrets.AZURE_APP_LOGIN }}'

    - name: Build/Push Docker Container
      run: az acr build --image "${{ env.repository-name }}:${{ github.run_number }}" --registry ${{ env.acr-name }} --file Dockerfile .
      working-directory: ${{ env.working-directory }}/web
      
  deploy-staging:
    runs-on: ubuntu-latest
    needs: [push-acr]
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    
    steps:
    - name: Deploy Container to App Service
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.app-service-name }}
        slot-name: ${{ env.slot-name }}
        images: ${{ env.acr-name }}.azurecr.io/${{ env.repository-name }}:${{ github.run_number }}
